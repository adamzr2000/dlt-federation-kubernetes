stages:
  - build

.docker_template: &docker_definition
  image: docker:cli
  services:
    - docker:dind
  before_script:
  - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin $CI_REGISTRY
  - docker version

docker-build-frontend:
  <<: *docker_definition
  stage: build
  variables:
    DOCKERFILE_PATH: dockerfiles/frontend
  script:
    - docker build --pull -f $DOCKERFILE_PATH/Dockerfile.frontend -t $CI_REGISTRY_IMAGE:frontend $DOCKERFILE_PATH
    - docker push $CI_REGISTRY_IMAGE:frontend
  rules:
    - if: $CI_COMMIT_BRANCH
      changes:
        - dockerfiles/frontend/**/*
    - when: manual

docker-build-receiver-encoder-publisher:
  <<: *docker_definition
  stage: build
  variables:
    DOCKERFILE_PATH: dockerfiles/receiver-encoder-publisher
  script:
    - docker build --pull -f $DOCKERFILE_PATH/Dockerfile.receiver_encoder_publisher -t $CI_REGISTRY_IMAGE:receiver_encoder_publisher_srt $DOCKERFILE_PATH
    - docker push $CI_REGISTRY_IMAGE:receiver_encoder_publisher_srt
  rules:
    - if: $CI_COMMIT_BRANCH
      changes:
        - dockerfiles/receiver-encoder-publisher/*
    - when: manual

docker-build-frame-sampler:
  <<: *docker_definition
  stage: build
  variables:
    DOCKERFILE_PATH: dockerfiles/frame-sampler
  script:
    - docker build --pull -f $DOCKERFILE_PATH/Dockerfile.sampler_sender -t $CI_REGISTRY_IMAGE:sampler_sender $DOCKERFILE_PATH
    - docker push $CI_REGISTRY_IMAGE:sampler_sender
  rules:
    - if: $CI_COMMIT_BRANCH
      changes:
        - dockerfiles/frame-sampler/*
    - when: manual

docker-object-detection:
  <<: *docker_definition
  stage: build
  variables:
    DOCKERFILE_PATH: dockerfiles/object-detector
  script:
    - docker build --pull -f $DOCKERFILE_PATH/Dockerfile.object-detection -t $CI_REGISTRY_IMAGE:object_detector $DOCKERFILE_PATH
    - docker push $CI_REGISTRY_IMAGE:object_detector
  rules:
    - if: $CI_COMMIT_BRANCH
      changes:
        - dockerfiles/object-detector/*
    - when: manual